function p_e = perfect_integrator(r, p1, p2)


r=r(r(:,2)==0,:);

% number of trials in each condition, needed for the bootstrap
size_p  = [sum(r(:,3)==0.032 & r(:,4)==0.032);...
           sum(r(:,3)==0.064 & r(:,4)==0.064);...
           sum(r(:,3)==0.128 & r(:,4)==0.128);...
           sum(r(:,3)==0.032 & r(:,4)==0.064)+...
           sum(r(:,3)==0.064 & r(:,4)==0.032);...
           sum(r(:,3)==0.032 & r(:,4)==0.128)+...
           sum(r(:,3)==0.128 & r(:,4)==0.032);...
           sum(r(:,3)==0.064 & r(:,4)==0.128)+...
           sum(r(:,3)==0.128 & r(:,4)==0.064)];

% Probability Correct in double pulse trials
n_crct  = [sum((r(:,3)==0.032) & (r(:,4)==0.032) & (r(:,10)==1));...
           sum((r(:,3)==0.064) & (r(:,4)==0.064) & (r(:,10)==1));...
           sum((r(:,3)==0.128) & (r(:,4)==0.128) & (r(:,10)==1));...
           (sum((r(:,3)==0.032) & (r(:,4)==0.064) & (r(:,10)==1))+sum((r(:,3)==0.064) & (r(:,4)==0.032) & (r(:,10)==1)));...
           (sum((r(:,3)==0.032) & (r(:,4)==0.128) & (r(:,10)==1))+sum((r(:,3)==0.128) & (r(:,4)==0.032) & (r(:,10)==1)));...
           (sum((r(:,3)==0.064) & (r(:,4)==0.128) & (r(:,10)==1))+sum((r(:,3)==0.128) & (r(:,4)==0.064) & (r(:,10)==1)))];

n_crct	= [n_crct; sum(n_crct(1:3)); sum(n_crct(4:6))];
size_p	= [size_p; sum(size_p(1:3)); sum(size_p(4:6))];
p_crct  = n_crct ./size_p;
n       = 10000;   %number of bootstrap runs

%% Bootstrap the double pulses
% Compute the evidence values
e_32_1      = icdf('Normal',p1(1),0,1);
e_64_1      = icdf('Normal',p1(2),0,1);
e_128_1     = icdf('Normal',p1(3),0,1);
e_32_2      = icdf('Normal',p2(1),0,1);
e_64_2      = icdf('Normal',p2(2),0,1);
e_128_2     = icdf('Normal',p2(3),0,1);

% Expected performance of the subject in 6 conditions
p_e     = [1 - normcdf(0,(e_32_1 + e_32_2), sqrt(2));...
           1 - normcdf(0,(e_64_1 + e_64_2), sqrt(2));...
           1 - normcdf(0,(e_128_1 + e_128_2), sqrt(2));...
           1 - normcdf(0,(e_32_1 + e_64_2), sqrt(2));...
           1 - normcdf(0,(e_32_1 + e_128_2), sqrt(2));...
           1 - normcdf(0,(e_64_1 + e_128_2), sqrt(2))];
                
p_e_eq      = mean(p_e(1:3));
p_e_neq     = mean(p_e(4:6));
p_e         = [p_e; p_e_eq; p_e_neq];

end
